cmake_minimum_required(VERSION 2.8)
project(hiredis C)

# redis-server configuration used for testing
set(REDIS_PORT 56379)
set(REDIS_SERVER "redis-server")
set(REDIS_TEST_CONFIG
"# redis-server configuration generated by CMake
daemonize yes
port ${REDIS_PORT}
bind 127.0.0.1
pidfile ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}-test.pid
unixsocket /tmp/redis.sock"
)
file(WRITE ${CMAKE_CURRENT_BINARY_DIR}/redis.conf ${REDIS_TEST_CONFIG})

# versioning
file(STRINGS "${CMAKE_CURRENT_SOURCE_DIR}/hiredis.h" HIREDIS_H_CONTENTS)

string (REGEX MATCH "HIREDIS_MAJOR[ \t]+([0-9]+)"
	HIREDIS_VERSION_MAJOR ${HIREDIS_H_CONTENTS})
string (REGEX MATCH "([0-9]+)"
	HIREDIS_VERSION_MAJOR ${HIREDIS_VERSION_MAJOR})
string (REGEX MATCH "HIREDIS_MINOR[ \t]+([0-9]+)"
	HIREDIS_VERSION_MINOR ${HIREDIS_H_CONTENTS})
string (REGEX MATCH "([0-9]+)"
	HIREDIS_VERSION_MINOR ${HIREDIS_VERSION_MINOR})
string (REGEX MATCH "HIREDIS_PATCH[ \t]+([0-9]+)"
	HIREDIS_VERSION_PATCH ${HIREDIS_H_CONTENTS})
string (REGEX MATCH "([0-9]+)"
	HIREDIS_VERSION_PATCH ${HIREDIS_VERSION_PATCH})

set(HIREDIS_VERSION
	${HIREDIS_VERSION_MAJOR}.${HIREDIS_VERSION_MINOR}.${HIREDIS_VERSION_PATCH})

# compiler options
set(CMAKE_C_FLAGS "-Wall -Wextra -std=c99")

# compiler include paths
include_directories(
	"${CMAKE_CURRENT_SOURCE_DIR}"
)

# sources
set(HIREDIS_SRC
	async.c
	hiredis.c
	net.c
	read.c
	sds.c
)

# generate static and shared libraries
set(LIBHIREDIS_STATIC "${PROJECT_NAME}-STATIC")
set(LIBHIREDIS_SHARED "${PROJECT_NAME}-SHARED")
foreach(target "STATIC" "SHARED")
	add_library(${PROJECT_NAME}-${target} ${target} ${HIREDIS_SRC})
	set_target_properties(${PROJECT_NAME}-${target} PROPERTIES OUTPUT_NAME ${PROJECT_NAME})
	set_target_properties(${PROJECT_NAME}-${target} PROPERTIES VERSION ${HIREDIS_VERSION} SOVERSION ${HIREDIS_VERSION_MAJOR})
endforeach(target)

# examples
add_subdirectory(examples)

# add test
enable_testing()
add_custom_target(check COMMAND ${CMAKE_CTEST_COMMAND} --verbose)

add_executable(${PROJECT_NAME}-test "${CMAKE_CURRENT_SOURCE_DIR}/test.c")

add_test(NAME "start-redis-server"   COMMAND "${REDIS_SERVER}" "${CMAKE_CURRENT_BINARY_DIR}/redis.conf")
add_test(NAME "${PROJECT_NAME}-test" COMMAND "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}-test" "-p" ${REDIS_PORT})
add_test(NAME "stop-redis-server"    COMMAND "killall" "redis-server")

target_link_libraries(${PROJECT_NAME}-test ${LIBHIREDIS_STATIC})

# add check target because test target only outputs errors
add_custom_target(hiredis-check COMMAND ${CMAKE_CTEST_COMMAND} --verbose)
